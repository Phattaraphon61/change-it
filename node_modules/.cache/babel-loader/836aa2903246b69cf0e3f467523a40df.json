{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\PHATTARAPHON\\\\Downloads\\\\shards-dashboard-react-master\\\\shards-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PHATTARAPHON\\\\Downloads\\\\shards-dashboard-react-master\\\\shards-dashboard-react-master\\\\src\\\\views\\\\dialog.js\";\nimport React from 'react';\nimport Button from '@bit/mui-org.material-ui.button';\nimport Dialog from '@bit/mui-org.material-ui.dialog';\nimport DialogActions from '@bit/mui-org.material-ui.dialog-actions';\nimport DialogContent from '@bit/mui-org.material-ui.dialog-content';\nimport DialogContentText from '@bit/mui-org.material-ui.dialog-content-text';\nimport DialogTitle from '@bit/mui-org.material-ui.dialog-title';\nexport default function AlertDialog() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Open alert dialog\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Use Google's location service?\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Disagree\"), React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Agree\"))));\n}","map":{"version":3,"sources":["C:\\Users\\PHATTARAPHON\\Downloads\\shards-dashboard-react-master\\shards-dashboard-react-master\\src\\views\\dialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AlertDialog","useState","open","setOpen","handleClickOpen","handleClose"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,iBAAP,MAA8B,8CAA9B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA,wBACZP,KAAK,CAACQ,QAAN,CAAe,KAAf,CADY;AAAA;AAAA,MAC7BC,IAD6B;AAAA,MACvBC,OADuB;;AAGpC,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,MAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAEC,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAIE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,OAAO,EAAEG,WAFX;AAGE,uBAAgB,oBAHlB;AAIE,wBAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsC,gCAAtC,CANF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAmB,IAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qIADF,CAPF,EAaE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAA8C,IAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAbF,CAJF,CADF;AA6BD","sourcesContent":["import React from 'react';\nimport Button from '@bit/mui-org.material-ui.button';\nimport Dialog from '@bit/mui-org.material-ui.dialog';\nimport DialogActions from '@bit/mui-org.material-ui.dialog-actions';\nimport DialogContent from '@bit/mui-org.material-ui.dialog-content';\nimport DialogContentText from '@bit/mui-org.material-ui.dialog-content-text';\nimport DialogTitle from '@bit/mui-org.material-ui.dialog-title';\n\nexport default function AlertDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to Google, even when no\n            apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}