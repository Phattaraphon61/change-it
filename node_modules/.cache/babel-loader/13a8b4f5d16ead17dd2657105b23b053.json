{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\PHATTARAPHON\\\\Downloads\\\\shards-dashboard-react-master\\\\shards-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\PHATTARAPHON\\\\Downloads\\\\shards-dashboard-react-master\\\\shards-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\PHATTARAPHON\\\\Downloads\\\\shards-dashboard-react-master\\\\shards-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\PHATTARAPHON\\\\Downloads\\\\shards-dashboard-react-master\\\\shards-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\PHATTARAPHON\\\\Downloads\\\\shards-dashboard-react-master\\\\shards-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\PHATTARAPHON\\\\Downloads\\\\shards-dashboard-react-master\\\\shards-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\PHATTARAPHON\\\\Downloads\\\\shards-dashboard-react-master\\\\shards-dashboard-react-master\\\\src\\\\views\\\\dialog.js\";\nimport { React, Component, useState } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { routerLink } from 'react-router-dom';\nimport { Col } from \"shards-react\";\nimport '../shards-dashboard/styles/Chat.css';\nimport Formchat from './Formchat';\n\nvar Listuserchat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Listuserchat, _Component);\n\n  function Listuserchat() {\n    _classCallCheck(this, Listuserchat);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Listuserchat).apply(this, arguments));\n  }\n\n  _createClass(Listuserchat, [{\n    key: \"render\",\n    value: function render() {\n      var _React$useState = React.useState(false),\n          _React$useState2 = _slicedToArray(_React$useState, 2),\n          open = _React$useState2[0],\n          setOpen = _React$useState2[1];\n\n      var handleClickOpen = function handleClickOpen() {\n        setOpen(true);\n      };\n\n      var handleClose = function handleClose() {\n        setOpen(false);\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Open alert dialog\"), React.createElement(Dialog, {\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Use Google's location service?\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        id: \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Disagree\"), React.createElement(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Agree\"))));\n    }\n  }]);\n\n  return Listuserchat;\n}(Component);\n\nexport { Listuserchat as default };","map":{"version":3,"sources":["C:\\Users\\PHATTARAPHON\\Downloads\\shards-dashboard-react-master\\shards-dashboard-react-master\\src\\views\\dialog.js"],"names":["React","Component","useState","ReactDOM","routerLink","Col","Formchat","Listuserchat","open","setOpen","handleClickOpen","handleClose"],"mappings":";;;;;;;AAAA,SAAQA,KAAR,EAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAO,qCAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;IACqBC,Y;;;;;;;;;;;;;6BAGV;AAAA,4BACiBP,KAAK,CAACE,QAAN,CAAe,KAAf,CADjB;AAAA;AAAA,UACAM,IADA;AAAA,UACMC,OADN;;AAGP,UAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BD,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAFD;;AAIA,UAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBF,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD,OAFD;;AAIA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAA2B,QAAA,KAAK,EAAC,SAAjC;AAA2C,QAAA,OAAO,EAAEC,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,EAIA,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEF,IADR;AAEE,QAAA,OAAO,EAAEG,WAFX;AAGE,2BAAgB,oBAHlB;AAIE,4BAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,gCAAtC,CANF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIADF,CAPF,EAaE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA,WAAjB;AAA8B,QAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA,WAAjB;AAA8B,QAAA,KAAK,EAAC,SAApC;AAA8C,QAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CAbF,CAJA,CADF;AA6BD;;;;EA3CuCV,S;;SAArBM,Y","sourcesContent":["import {React,Component ,useState} from \"react\";\nimport ReactDOM from 'react-dom';\nimport { routerLink } from 'react-router-dom';\nimport { Col } from \"shards-react\";\nimport '../shards-dashboard/styles/Chat.css'\nimport Formchat from './Formchat'\nexport default class Listuserchat extends Component {\n\n\n  render() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    return (\n      <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}