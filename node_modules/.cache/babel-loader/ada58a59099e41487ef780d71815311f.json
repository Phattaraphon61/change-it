{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar Prompts_1 = require(\"./Prompts\");\n\nvar PromptInput =\n/** @class */\nfunction (_super) {\n  __extends(PromptInput, _super);\n\n  function PromptInput(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.formElement = null;\n    _this.inputElement = null;\n    var _a = props.prompt,\n        initialValue = _a.initialValue,\n        placeholder = _a.placeholder;\n    _this.state = {\n      value: initialValue || '',\n      initialValue: initialValue,\n      placeholder: placeholder\n    };\n    _this.onSubmit = _this.onSubmit.bind(_this);\n    return _this;\n  }\n\n  PromptInput.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this.setState({\n      value: this.state.initialValue || ''\n    }, function () {\n      _this.inputElement && _this.inputElement.select();\n    });\n  };\n\n  Object.defineProperty(PromptInput.prototype, \"value\", {\n    get: function get() {\n      return this.state.value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PromptInput.prototype.checkValidity = function () {\n    var formElement = this.formElement;\n\n    if (formElement) {\n      if (!formElement.checkValidity()) {\n        formElement.reportValidity();\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  PromptInput.prototype.onSubmit = function (e) {\n    e.preventDefault();\n\n    if (!this.checkValidity()) {\n      return false;\n    }\n\n    this.props.onSubmit && this.props.onSubmit();\n    return false;\n  };\n\n  PromptInput.prototype.render = function () {\n    var _this = this;\n\n    var prompt = this.props.prompt;\n    var _a = this.state,\n        value = _a.value,\n        placeholder = _a.placeholder;\n    var type = prompt instanceof Prompts_1.PasswordPrompt ? 'password' : 'text';\n    return react_1.default.createElement(\"form\", {\n      ref: function ref(el) {\n        _this.formElement = el;\n      },\n      onSubmit: this.onSubmit\n    }, react_1.default.createElement(\"input\", {\n      ref: function ref(el) {\n        _this.inputElement = el;\n      },\n      type: type,\n      className: 'form-control',\n      value: value,\n      placeholder: placeholder,\n      onChange: function onChange(e) {\n        return _this.setState({\n          value: e.target.value\n        });\n      },\n      required: prompt.required,\n      autoFocus: true\n    }));\n  };\n\n  return PromptInput;\n}(react_1.default.Component);\n\nexports.default = PromptInput;","map":null,"metadata":{},"sourceType":"script"}